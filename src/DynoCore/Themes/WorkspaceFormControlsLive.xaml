<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:formControls1="clr-namespace:Dyno.Views.FormControls"
    xmlns:dyno="clr-namespace:Dyno"
    xmlns:formControls="clr-namespace:Dyno.FormControls">

    <Style TargetType="{x:Type formControls:FormImage}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="formControls:FormImage">
                    <Border x:Name="Border" Background="Transparent" BorderThickness="0" BorderBrush="Gray">
                        <Image SnapsToDevicePixels="True" Source="{Binding Source}" Stretch="{Binding EditorStretch}" RenderOptions.BitmapScalingMode="HighQuality" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source}" Value="{x:Null}">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            <Setter TargetName="Border" Property="Background" Value="#e0e0e0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.4"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type formControls:FormListBox}">
        <Setter Property="Background" Value="#d5ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="formControls:FormListBox">
                    <Border Background="{TemplateBinding Background}">
                        <ListBox x:Name="internal" ItemsSource="{Binding ItemsList}" SelectedItem="{Binding Path=SelectedItem}" Background="Transparent"  MinHeight="0" SelectionMode="{Binding Path=SelectionMode, Mode=OneWay}" >
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl 
                                    FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type formControls:FormBaseText}}}"  
                                    HorizontalAlignment="{Binding Path=EditorTextAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type formControls:FormBaseBox}} }"
                                    FontWeight="{Binding Path=FontWeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type formControls:FormBaseText}}}" 
                                    Content="{Binding}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#50ffffff"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ffffff"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type formControls:FormComboBox}">
        <Setter Property="Background" Value="#d5ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="formControls:FormComboBox">
                    <Border Background="{TemplateBinding Background}">
                        <ComboBox x:Name="internal" ItemsSource="{Binding ItemsList}" SelectedItem="{Binding SelectedItem}"  MinHeight="0" Background="Transparent">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="ComboBox">
                                    <ContentControl 
                                    FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type formControls:FormBaseText}}}" 
                                    HorizontalContentAlignment="Center" 
                                    FontWeight="{Binding Path=FontWeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type formControls:FormBaseText}}}" 
                                    Content="{Binding}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#50ffffff"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ffffff"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type formControls:FormLabel}">
        <Setter Property="Foreground" Value="DarkSlateGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="formControls:FormLabel">
                    <TextBlock x:Name="internal" Text="{Binding Values[EditorTextBinding]}" Background="Transparent"  MinHeight="0" Foreground="{TemplateBinding Foreground}"

                               TextWrapping="Wrap"
                               TextAlignment="{Binding EditorTextAlignment}"
                           
                           FontSize="{Binding FontSize}" 
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                            FontWeight="{Binding FontWeight }"/>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type formControls:FormTextBox}">
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="formControls:FormTextBox">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="1" Opacity="0.5"
                                BorderBrush="{TemplateBinding BorderBrush}"/>
                        <TextBox x:Name="internal" Text="{Binding Values[EditorTextBinding]}"
                                     Background="Transparent" MinHeight="0" TextWrapping="{Binding TextWrapping}"
                                     VerticalContentAlignment="Center"
                                     FontSize="{Binding FontSize}"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     TextAlignment="{Binding EditorTextAlignment}"
                                     BorderThickness="0"
                                     FontWeight="{Binding FontWeight }" />

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#50ffffff"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="1"/>

                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="1"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding IsError}" Value="True">
                            <Setter Property="BorderBrush" Value="red"/>
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Red" Opacity="0.5" ShadowDepth="0" BlurRadius="8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="#10ff0000"/>
                            <Setter Property="ToolTip" Value="{Binding Values[EditorErrorTooltip]}"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="UpBownButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="1"/>
       

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Inner" Background="Transparent">
                        <TextBlock x:Name="Title" Text="{TemplateBinding Content}"
                                   Foreground="DimGray" TextAlignment="Center" FontWeight="Bold" FontSize="16"
                                   Padding="0" Margin="0,-5,0,0" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Title" Property="Foreground" Value="Black"/>
                            <Setter TargetName="Inner" Property="Background" Value="#eeeeee"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type formControls:FormNumberBox}">
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="formControls:FormNumberBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.ColumnSpan="3" x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="1" Opacity="0.5"
                                BorderBrush="{TemplateBinding BorderBrush}"/>

                        <TextBox Grid.Column="0" Grid.Row="0" x:Name="internal" Text="{Binding Values[EditorTextBinding]}"
                                     Background="Transparent" MinHeight="0" TextWrapping="{Binding TextWrapping}"
                                     VerticalContentAlignment="Center"
                                     FontSize="{Binding FontSize}"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     TextAlignment="{Binding EditorTextAlignment}"
                                     BorderThickness="0"
                                     FontWeight="{Binding FontWeight }" />

                        <Button Style="{StaticResource UpBownButton}" x:Name="DownButton" Grid.Column="1" Content="-"/>
                        <Button  Style="{StaticResource UpBownButton}" x:Name="UpButton" Grid.Column="2" Content="+"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#50ffffff"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="1"/>

                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="1"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding IsError}" Value="True">
                            <Setter Property="BorderBrush" Value="red"/>
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Red" Opacity="0.5" ShadowDepth="0" BlurRadius="8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="#10ff0000"/>
                            <Setter Property="ToolTip" Value="{Binding Values[EditorErrorTooltip]}"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type formControls:FormCheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="formControls:FormCheckBox">
                    <CheckBox x:Name="internal" Content="{Binding Values[EditorTextBinding]}" IsChecked="{Binding IsChecked}"  MinHeight="0"
                               VerticalContentAlignment="Center"
                                HorizontalContentAlignment="{Binding EditorTextAlignment}"
                               FontSize="{Binding FontSize}" 
                               FontWeight="{Binding FontWeight }"
                               />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type formControls:FormRadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="formControls:FormRadioButton">
                    <RadioButton x:Name="internal" Content="{Binding Values[EditorTextBinding]}" IsChecked="{Binding IsChecked}" GroupName="{Binding EditorGroupName}"  MinHeight="0"
                               VerticalContentAlignment="Center"
                                HorizontalContentAlignment="{Binding EditorTextAlignment}"
                               FontSize="{Binding FontSize}" 
                               FontWeight="{Binding FontWeight }"
                               />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type formControls:FormSelectButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="formControls:FormSelectButton">
                    <Button x:Name="internal" Content="{Binding EditorText}" Focusable="False"  MinHeight="0"
                               VerticalContentAlignment="Center"
                                HorizontalContentAlignment="{Binding EditorTextAlignment}"
                               FontSize="{Binding FontSize}" 
                               FontWeight="{Binding FontWeight }"
                               Command="{Binding SelectButtonCommand}"
                               />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>



